//Searching :- means searching in an array of elements to get a value

//Linear search is a type of search in which we start searching from the first element until we find our desired element.

/* consider an exaple to demonstrate best and worst case scenarios
*  question: find the element 18 from an array of 200 elements
* The scenario:- 
* best case:- means you find the element in the first loop
* worst case:- means you dont find the element you are looking for in the array at all
*/

//Do linear search to find if the element exists in the array or not

//sol]
package javatpoint;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;


public class Student{
	public static void main(String[] args) {
	
		Scanner input = new Scanner(System.in);
		int[] arr = {12,3,45,76,89,-11,46,97};
		int target = 12;
		int ans = linearSearch(arr,target);
		System.out.println(ans);
	}
	
	static int linearSearch(int[] arr, int target) {
		//if array empty return -1
		if(arr.length == 0) {
			return -1;
		}
		
		//traverse the elements in the loop
		//if element exists return the element
		for(int i=0;i<arr.length;i++) {
			int element = arr[i]; //assume first value in array as answer 
			if(element == target) { //then check for the value you are searching
				return element;
			}
		}
		//if no conditions are satisfied then return -1
		return -1;
	}
	
}

op:-

12  //meaning it exists

Q1] linear search a chracter in a given string.

sol]
package javatpoint;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;


public class Student{
	public static void main(String[] args) {
		String name = "Rishe";
		char searchString = 'o';
		boolean charExist = stringSearch(name,searchString);
		System.out.println(charExist);
	}
	//for loop
	static boolean stringSearch(String name, char target) {
		if(name.length() == 0 ) {
			return false;
		}
		
		for(int i=0; i<name.length();i++) {
			if(target == name.charAt(i)) {
				return true;
			}
		}
		
		return false;
	}
	
	//for each loop
	static boolean stringSearch2(String name, char target) {
		if(name.length() == 0 ) {
			return false;
		}
		
		/*to use a for each loop we need to have 
		*a collection or array. since we dont have
		*either of them, we use toCharArray() to
		*convert the string into a array of characters
		*/
		for(char ch:name.toCharArray()) { // name = ['r','i','s','h','e'];
			if(ch == target) {
				return true;
			}
		}
		
		return false;
	}
	
	
}

output:-

False

 

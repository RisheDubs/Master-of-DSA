//2d Arrays Binary search


/* when trying to solve matrix related problems, with sorted array. 
*  we have to try to think of ways to eliminate rows and coloumns.
*/

1] Find a target element in 2D array, and return its position [//***Notes avilable for explanation****]

sol]
package javatpoint;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;


public class Student{
	public static void main(String[] args) {
		int[][] matrix = {
				{10, 20 ,30 , 40},
				{15, 25 ,35 , 45},
				{28, 29 ,37 , 49},
				{33, 34 ,38 , 50}};
		int target = 49 ;
		int[] answer = search(matrix, target);
		System.out.println(Arrays.toString(answer));
	}
	
	static int[] search(int[][] matrix, int target) {
		
		int row = 0;
		int col = matrix.length-1;
		
		while(row < matrix.length && col >= 0 ) {
			//check 1
			if(matrix[row][col] == target) {
				return new int[]{row,col};
			}
			//check 2
			if(matrix[row][col] < target) {
				row++;
			}
			//check 3
			else {
				col--;
			}
		}
		return new int[]{-1,-1};
	}
	
}

op:-
[2, 3]

2]

sol]

op:-
